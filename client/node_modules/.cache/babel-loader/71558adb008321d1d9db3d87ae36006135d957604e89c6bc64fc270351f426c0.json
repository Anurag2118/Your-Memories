{"ast":null,"code":"var _jsxFileName = \"D:\\\\Your Memories\\\\client\\\\src\\\\pages\\\\create-memory.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useGetUserID } from \"../hooks/useGetUserID\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateMemory = () => {\n  _s();\n  const userID = useGetUserID();\n  const [cookies, _] = useCookies([\"access_token\"]);\n  const [memory, setMemory] = useState({\n    name: \"\",\n    descriptions: [],\n    imageUrl: \"\",\n    timeSpent: \"\",\n    userOwner: userID\n  });\n  const navigate = useNavigate();\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setMemory({\n      ...memory,\n      [name]: value\n    });\n  };\n  const handleDescriptionChange = (event, idx) => {\n    const {\n      value\n    } = event.target;\n    const descriptions = [...memory.descriptions];\n    descriptions[idx] = value;\n    setMemory({\n      ...memory,\n      descriptions\n    });\n  };\n  const addDescription = () => {\n    setMemory({\n      ...memory,\n      descriptions: [...memory.descriptions, \"\"]\n    });\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3001/memories\", {\n        ...memory\n      }, {\n        headers: {\n          authorization: cookies.access_token\n        }\n      });\n      alert(\"Memory Created!\");\n      navigate(\"/\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-memory\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: memory.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"descriptions\",\n        children: \"Descriptions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), memory.descriptions.map((desc, idx) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: desc,\n        onChange: e => handleDescriptionChange(e, idx)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDescription,\n        type: \"button\",\n        children: \"Add Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageUrl\",\n        children: \"Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"imageUrl\",\n        name: \"imageUrl\",\n        value: memory.imageUrl,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"timeSpent\",\n        children: \"Time Spent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"timeSpent\",\n        name: \"timeSpent\",\n        value: memory.timeSpent,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateMemory, \"PrLxoU2qUHXaiGhD9/AuYCV33lQ=\", false, function () {\n  return [useGetUserID, useCookies, useNavigate];\n});\n_c = CreateMemory;\nvar _c;\n$RefreshReg$(_c, \"CreateMemory\");","map":{"version":3,"names":["React","useState","axios","useGetUserID","useNavigate","useCookies","jsxDEV","_jsxDEV","CreateMemory","_s","userID","cookies","_","memory","setMemory","name","descriptions","imageUrl","timeSpent","userOwner","navigate","handleChange","event","value","target","handleDescriptionChange","idx","addDescription","onSubmit","preventDefault","post","headers","authorization","access_token","alert","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","map","desc","e","onClick","_c","$RefreshReg$"],"sources":["D:/Your Memories/client/src/pages/create-memory.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useGetUserID } from \"../hooks/useGetUserID\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nexport const CreateMemory = () => {\r\n  const userID = useGetUserID();\r\n  const [cookies, _] = useCookies([\"access_token\"]);\r\n\r\n  const [memory, setMemory] = useState({\r\n    name: \"\",\r\n    descriptions: [],\r\n    imageUrl: \"\",\r\n    timeSpent: \"\",\r\n    userOwner: userID,\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setMemory({ ...memory, [name]: value });\r\n  };\r\n\r\n  const handleDescriptionChange = (event, idx) => {\r\n    const { value } = event.target;\r\n    const descriptions = [...memory.descriptions];\r\n    descriptions[idx] = value;\r\n    setMemory({ ...memory, descriptions });\r\n  };\r\n\r\n  const addDescription = () => {\r\n    setMemory({ ...memory, descriptions: [...memory.descriptions, \"\"] });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3001/memories\", { ...memory }, {\r\n        headers: { authorization: cookies.access_token },\r\n      });\r\n      alert(\"Memory Created!\");\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-memory\">\r\n      <h2>Create Memory</h2>\r\n      <form onSubmit={onSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input type=\"text\" id=\"name\" name=\"name\" value={memory.name} onChange={handleChange} />\r\n\r\n        <label htmlFor=\"descriptions\">Descriptions</label>\r\n        {memory.descriptions.map((desc, idx) => (\r\n          <input key={idx} type=\"text\" value={desc} onChange={(e) => handleDescriptionChange(e, idx)} />\r\n        ))}\r\n        <button onClick={addDescription} type=\"button\">Add Description</button>\r\n\r\n        <label htmlFor=\"imageUrl\">Image URL</label>\r\n        <input type=\"text\" id=\"imageUrl\" name=\"imageUrl\" value={memory.imageUrl} onChange={handleChange} />\r\n\r\n        <label htmlFor=\"timeSpent\">Time Spent</label>\r\n        <input type=\"text\" id=\"timeSpent\" name=\"timeSpent\" value={memory.timeSpent} onChange={handleChange} />\r\n\r\n        <button type=\"submit\">Create Memory</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}