{"ast":null,"code":"var _jsxFileName = \"D:\\\\Your Memories\\\\client\\\\src\\\\pages\\\\create-memory.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useGetUserID } from \"../hooks/useGetUserID\"; // Still used for initial state, but can be removed if not needed elsewhere\nimport { useNavigate } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"https://your-memories-backend.onrender.com\"; // Your backend URL\n\nexport const CreateMemory = () => {\n  _s();\n  const userID = useGetUserID(); // This is now primarily for initial state if you pre-fill something,\n  // but userOwner is set by backend from token.\n  const [cookies, _] = useCookies([\"access_token\"]);\n  const [memory, setMemory] = useState({\n    name: \"\",\n    descriptions: [],\n    imageURL: \"\",\n    timeSpent: \"\"\n    // userOwner: userID, // <--- REMOVE THIS LINE\n  });\n  const navigate = useNavigate();\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setMemory({\n      ...memory,\n      [name]: value\n    });\n  };\n  const handleDescriptionChange = (event, idx) => {\n    const {\n      value\n    } = event.target;\n    const descriptions = [...memory.descriptions];\n    descriptions[idx] = value;\n    setMemory({\n      ...memory,\n      descriptions\n    });\n  };\n  const addDescription = () => {\n    setMemory({\n      ...memory,\n      descriptions: [...memory.descriptions, \"\"]\n    });\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      await axios.post(`${BACKEND_URL}/memories`, {\n        ...memory\n      }, {\n        headers: {\n          // Ensure your cookie access_token is a pure JWT.\n          // Add \"Bearer \" prefix here if your login route doesn't return it with the token.\n          // Assuming your login route returns just the token, add \"Bearer \" here:\n          authorization: `Bearer ${cookies.access_token}`\n        }\n      });\n      alert(\"Memory Created!\");\n      navigate(\"/\");\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      console.error(\"Error creating memory on frontend:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n      alert(`Failed to create memory: ${((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Please check console for details.\"}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-memory\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: memory.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"descriptions\",\n        children: \"Descriptions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), memory.descriptions.map((description, idx) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"descriptions\",\n        value: description,\n        onChange: event => {\n          handleDescriptionChange(event, idx);\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDescription,\n        type: \"button\",\n        children: \"Add Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageURL\",\n        children: \"Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"imageURL\",\n        name: \"imageURL\",\n        value: memory.imageURL,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"timeSpent\",\n        children: \"Time Spent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"timeSpent\",\n        name: \"timeSpent\",\n        value: memory.timeSpent,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateMemory, \"hevgYEKUQ7aZjvZWOxSdQo6OY9E=\", false, function () {\n  return [useGetUserID, useCookies, useNavigate];\n});\n_c = CreateMemory;\nvar _c;\n$RefreshReg$(_c, \"CreateMemory\");","map":{"version":3,"names":["useState","axios","useGetUserID","useNavigate","useCookies","jsxDEV","_jsxDEV","BACKEND_URL","CreateMemory","_s","userID","cookies","_","memory","setMemory","name","descriptions","imageURL","timeSpent","navigate","handleChange","event","value","target","handleDescriptionChange","idx","addDescription","onSubmit","preventDefault","post","headers","authorization","access_token","alert","err","_err$response","_err$response$data","_err$response2","_err$response2$data","console","error","response","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","map","description","onClick","_c","$RefreshReg$"],"sources":["D:/Your Memories/client/src/pages/create-memory.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useGetUserID } from \"../hooks/useGetUserID\"; // Still used for initial state, but can be removed if not needed elsewhere\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\nconst BACKEND_URL = \"https://your-memories-backend.onrender.com\"; // Your backend URL\r\n\r\nexport const CreateMemory = () => {\r\n\r\n    const userID = useGetUserID(); // This is now primarily for initial state if you pre-fill something,\r\n                                  // but userOwner is set by backend from token.\r\n    const [cookies, _] = useCookies([\"access_token\"]);\r\n\r\n    const [memory, setMemory] = useState({\r\n        name: \"\",\r\n        descriptions: [],\r\n        imageURL: \"\",\r\n        timeSpent: \"\",\r\n        // userOwner: userID, // <--- REMOVE THIS LINE\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setMemory({ ...memory, [name]: value });\r\n    };\r\n\r\n    const handleDescriptionChange = (event, idx) => {\r\n        const { value } = event.target;\r\n        const descriptions = [...memory.descriptions];\r\n        descriptions[idx] = value;\r\n        setMemory({ ...memory, descriptions });\r\n    };\r\n\r\n    const addDescription = () => {\r\n        setMemory({ ...memory, descriptions: [...memory.descriptions, \"\"] });\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            await axios.post(`${BACKEND_URL}/memories`, { ...memory },\r\n                {\r\n                    headers: {\r\n                        // Ensure your cookie access_token is a pure JWT.\r\n                        // Add \"Bearer \" prefix here if your login route doesn't return it with the token.\r\n                        // Assuming your login route returns just the token, add \"Bearer \" here:\r\n                        authorization: `Bearer ${cookies.access_token}`,\r\n                    },\r\n                }\r\n            );\r\n            alert(\"Memory Created!\");\r\n            navigate(\"/\");\r\n        } catch (err) {\r\n            console.error(\"Error creating memory on frontend:\", err.response?.data?.message || err.message);\r\n            alert(`Failed to create memory: ${err.response?.data?.message || \"Please check console for details.\"}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-memory\">\r\n            <h2>Create Memory</h2>\r\n            <form onSubmit={onSubmit}>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={memory.name}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <label htmlFor=\"descriptions\">Descriptions</label>\r\n                {memory.descriptions.map((description, idx) => (\r\n                    <input\r\n                        key={idx}\r\n                        type=\"text\"\r\n                        name=\"descriptions\"\r\n                        value={description}\r\n                        onChange={(event) => {\r\n                            handleDescriptionChange(event, idx);\r\n                        }}\r\n                    />\r\n                ))}\r\n                <button onClick={addDescription} type=\"button\">Add Description</button>\r\n\r\n                <label htmlFor=\"imageURL\">Image URL</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"imageURL\"\r\n                    name=\"imageURL\"\r\n                    value={memory.imageURL}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <label htmlFor=\"timeSpent\">Time Spent</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"timeSpent\"\r\n                    name=\"timeSpent\"\r\n                    value={memory.timeSpent}\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <button type=\"submit\">Create Memory</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}