{"ast":null,"code":"var _jsxFileName = \"D:\\\\Your Memories\\\\client\\\\src\\\\pages\\\\saved-memories.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useGetUserID } from \"../hooks/useGetUserID\";\n\n// Material-UI Components\nimport { Box, Grid, Card, CardMedia, CardContent, Typography, CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nexport const SavedMemories = () => {\n  _s();\n  const [savedMemories, setSavedMemories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const userID = useGetUserID();\n  useEffect(() => {\n    const fetchSavedMemories = async () => {\n      // Don't fetch if userID is not available yet\n      if (!userID) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await axios.get(`${BACKEND_URL}/memories/savedMemories/${userID}`);\n        setSavedMemories(response.data.savedMemories || []);\n      } catch (err) {\n        console.error(\"Error fetching saved memories:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSavedMemories();\n  }, [userID]); // Re-run effect if userID changes\n\n  // Shows a loading spinner while memories are being fetched\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      padding: 3,\n      backgroundColor: '#f4f6f8',\n      minHeight: 'calc(100vh - 64px)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      component: \"h1\",\n      gutterBottom: true,\n      align: \"center\",\n      sx: {\n        fontWeight: 'bold',\n        marginBottom: 4\n      },\n      children: \"Your Saved Memories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), savedMemories.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      color: \"text.secondary\",\n      children: \"You haven't saved any memories yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: savedMemories.map(memory => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            borderRadius: 2,\n            boxShadow: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            height: \"200\",\n            image: memory.imageURL,\n            alt: memory.name,\n            sx: {\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"h2\",\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: memory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: memory.descriptions[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, memory._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SavedMemories, \"iCF9dL4MktWw92eKXTTLhdnUEnE=\", false, function () {\n  return [useGetUserID];\n});\n_c = SavedMemories;\nvar _c;\n$RefreshReg$(_c, \"SavedMemories\");","map":{"version":3,"names":["React","useEffect","useState","axios","useGetUserID","Box","Grid","Card","CardMedia","CardContent","Typography","CircularProgress","jsxDEV","_jsxDEV","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","SavedMemories","_s","savedMemories","setSavedMemories","loading","setLoading","userID","fetchSavedMemories","response","get","data","err","console","error","sx","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","padding","backgroundColor","minHeight","variant","component","gutterBottom","align","fontWeight","marginBottom","length","color","container","spacing","map","memory","item","xs","sm","md","lg","flexDirection","borderRadius","boxShadow","image","imageURL","alt","name","objectFit","descriptions","_id","_c","$RefreshReg$"],"sources":["D:/Your Memories/client/src/pages/saved-memories.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useGetUserID } from \"../hooks/useGetUserID\";\r\n\r\n// Material-UI Components\r\nimport { Box, Grid, Card, CardMedia, CardContent, Typography, CircularProgress } from \"@mui/material\";\r\n\r\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\r\n\r\nexport const SavedMemories = () => {\r\n  const [savedMemories, setSavedMemories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const userID = useGetUserID();\r\n\r\n  useEffect(() => {\r\n    const fetchSavedMemories = async () => {\r\n      // Don't fetch if userID is not available yet\r\n      if (!userID) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        const response = await axios.get(\r\n          `${BACKEND_URL}/memories/savedMemories/${userID}`\r\n        );\r\n        setSavedMemories(response.data.savedMemories || []);\r\n      } catch (err) {\r\n        console.error(\"Error fetching saved memories:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSavedMemories();\r\n  }, [userID]); // Re-run effect if userID changes\r\n\r\n  // Shows a loading spinner while memories are being fetched\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ padding: 3, backgroundColor: '#f4f6f8', minHeight: 'calc(100vh - 64px)' }}>\r\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\" sx={{ fontWeight: 'bold', marginBottom: 4 }}>\r\n        Your Saved Memories\r\n      </Typography>\r\n\r\n      {/* Check if there are any saved memories */}\r\n      {savedMemories.length === 0 ? (\r\n        <Typography variant=\"h6\" align=\"center\" color=\"text.secondary\">\r\n          You haven't saved any memories yet.\r\n        </Typography>\r\n      ) : (\r\n        <Grid container spacing={4}>\r\n          {savedMemories.map((memory) => (\r\n            <Grid item key={memory._id} xs={12} sm={6} md={4} lg={3}>\r\n              <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column', borderRadius: 2, boxShadow: 3 }}>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"200\"\r\n                  image={memory.imageURL}\r\n                  alt={memory.name}\r\n                  sx={{ objectFit: 'cover' }}\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\" sx={{ fontWeight: 'bold' }}>\r\n                    {memory.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {memory.descriptions[0]}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}