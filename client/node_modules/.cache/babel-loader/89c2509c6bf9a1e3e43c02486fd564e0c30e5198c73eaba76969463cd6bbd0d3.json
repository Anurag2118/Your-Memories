{"ast":null,"code":"var _jsxFileName = \"D:\\\\Your Memories\\\\client\\\\src\\\\pages\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useGetUserID } from \"../hooks/useGetUserID\";\nimport { useCookies } from \"react-cookie\";\nimport { Box, Grid, Card, CardMedia, CardContent, CardActions, Button, Typography, CircularProgress } from \"@mui/material\";\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nexport const Home = () => {\n  _s();\n  const [memories, setMemories] = useState([]);\n  const [savedMemories, setSavedMemories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [cookies, _] = useCookies([\"access_token\"]);\n  const userID = useGetUserID();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const memoriesResponse = await axios.get(`${BACKEND_URL}/memories`);\n        setMemories(memoriesResponse.data);\n        if (cookies.access_token && userID) {\n          const savedResponse = await axios.get(`${BACKEND_URL}/memories/savedMemories/ids/${userID}`);\n          setSavedMemories(savedResponse.data.savedMemories || []);\n        }\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [userID, cookies.access_token]);\n  const toggleSaveMemory = async memoryID => {\n    try {\n      const response = await axios.put(`${BACKEND_URL}/memories`, {\n        memoryID,\n        userID\n      }, {\n        headers: {\n          authorization: `Bearer ${cookies.access_token}`\n        }\n      });\n      setSavedMemories(response.data.savedMemories);\n    } catch (err) {\n      console.error(\"Error toggling save state:\", err);\n    }\n  };\n  const isMemorySaved = id => savedMemories.includes(id);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      paddingX: {\n        xs: 2,\n        sm: 4\n      },\n      paddingY: 5,\n      backgroundColor: '#f4f6f8'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      component: \"h1\",\n      gutterBottom: true,\n      align: \"center\",\n      sx: {\n        fontWeight: 'bold',\n        marginBottom: 4\n      },\n      children: \"Discover Memories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justifyContent: \"center\",\n      children: memories.map(memory => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: 360,\n            display: 'flex',\n            flexDirection: 'column',\n            borderRadius: 2,\n            boxShadow: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            image: memory.imageURL,\n            alt: memory.name,\n            sx: {\n              height: 200,\n              // Fixed height for the image area\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              flexGrow: 1,\n              overflow: 'auto'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h5\",\n              component: \"h2\",\n              sx: {\n                fontWeight: 'bold'\n              },\n              children: memory.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), memory.descriptions.map((desc, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"\\u2022 \", desc]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            sx: {\n              paddingX: 2,\n              paddingBottom: 2\n            },\n            children: userID ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              size: \"small\",\n              onClick: () => toggleSaveMemory(memory._id),\n              startIcon: isMemorySaved(memory._id) ? /*#__PURE__*/_jsxDEV(BookmarkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 60\n              }, this) : /*#__PURE__*/_jsxDEV(BookmarkBorderIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 79\n              }, this),\n              children: isMemorySaved(memory._id) ? \"Saved\" : \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              color: \"text.secondary\",\n              children: \"Login to save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, memory._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"jHnn6VxvxphSJT1Se1nWa0OHzyI=\", false, function () {\n  return [useCookies, useGetUserID];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","useGetUserID","useCookies","Box","Grid","Card","CardMedia","CardContent","CardActions","Button","Typography","CircularProgress","BookmarkBorderIcon","BookmarkIcon","jsxDEV","_jsxDEV","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","Home","_s","memories","setMemories","savedMemories","setSavedMemories","loading","setLoading","cookies","_","userID","fetchData","memoriesResponse","get","data","access_token","savedResponse","err","console","error","toggleSaveMemory","memoryID","response","put","headers","authorization","isMemorySaved","id","includes","sx","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","paddingX","xs","sm","paddingY","backgroundColor","variant","component","gutterBottom","align","fontWeight","marginBottom","container","spacing","map","memory","item","md","lg","flexDirection","borderRadius","boxShadow","image","imageURL","alt","name","objectFit","flexGrow","overflow","descriptions","desc","index","color","paddingBottom","size","onClick","_id","startIcon","_c","$RefreshReg$"],"sources":["D:/Your Memories/client/src/pages/home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useGetUserID } from \"../hooks/useGetUserID\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { Box, Grid, Card, CardMedia, CardContent, CardActions, Button, Typography, CircularProgress } from \"@mui/material\";\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\n\r\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\r\n\r\nexport const Home = () => {\r\n  const [memories, setMemories] = useState([]);\r\n  const [savedMemories, setSavedMemories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [cookies, _] = useCookies([\"access_token\"]);\r\n  const userID = useGetUserID();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const memoriesResponse = await axios.get(`${BACKEND_URL}/memories`);\r\n        setMemories(memoriesResponse.data);\r\n\r\n        if (cookies.access_token && userID) {\r\n          const savedResponse = await axios.get(\r\n            `${BACKEND_URL}/memories/savedMemories/ids/${userID}`\r\n          );\r\n          setSavedMemories(savedResponse.data.savedMemories || []);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error fetching data:\", err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [userID, cookies.access_token]);\r\n\r\n  const toggleSaveMemory = async (memoryID) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${BACKEND_URL}/memories`,\r\n        { memoryID, userID },\r\n        { headers: { authorization: `Bearer ${cookies.access_token}` } }\r\n      );\r\n      setSavedMemories(response.data.savedMemories);\r\n    } catch (err) {\r\n      console.error(\"Error toggling save state:\", err);\r\n    }\r\n  };\r\n\r\n  const isMemorySaved = (id) => savedMemories.includes(id);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '80vh' }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ paddingX: { xs: 2, sm: 4 }, paddingY: 5, backgroundColor: '#f4f6f8' }}>\r\n      <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\" sx={{ fontWeight: 'bold', marginBottom: 4 }}>\r\n        Discover Memories\r\n      </Typography>\r\n      \r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        {memories.map((memory) => (\r\n          <Grid item key={memory._id} xs={12} sm={6} md={4} lg={3}>\r\n            <Card sx={{ height: 360, display: 'flex', flexDirection: 'column', borderRadius: 2, boxShadow: 3 }}>\r\n              <CardMedia\r\n                component=\"img\"\r\n                image={memory.imageURL}\r\n                alt={memory.name}\r\n                sx={{ \r\n                  height: 200, // Fixed height for the image area\r\n                  objectFit: 'cover' \r\n                }}\r\n              />\r\n              <CardContent sx={{ flexGrow: 1, overflow: 'auto' }}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" sx={{ fontWeight: 'bold' }}>\r\n                  {memory.name}\r\n                </Typography>\r\n                {memory.descriptions.map((desc, index) => (\r\n                  <Typography key={index} variant=\"body2\" color=\"text.secondary\">\r\n                    • {desc}\r\n                  </Typography>\r\n                ))}\r\n\r\n              </CardContent>\r\n              <CardActions sx={{ paddingX: 2, paddingBottom: 2 }}>\r\n                {userID ? (\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={() => toggleSaveMemory(memory._id)}\r\n                    startIcon={isMemorySaved(memory._id) ? <BookmarkIcon /> : <BookmarkBorderIcon />}\r\n                  >\r\n                    {isMemorySaved(memory._id) ? \"Saved\" : \"Save\"}\r\n                  </Button>\r\n                ) : (\r\n                  <Typography variant=\"caption\" color=\"text.secondary\">\r\n                    Login to save\r\n                  </Typography>\r\n                )}\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,WAAW,EAAEC,MAAM,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,eAAe;AAC1H,OAAOC,kBAAkB,MAAM,oCAAoC;AACnE,OAAOC,YAAY,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AAErD,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM,CAAC6B,OAAO,EAAEC,CAAC,CAAC,GAAG3B,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;EACjD,MAAM4B,MAAM,GAAG7B,YAAY,CAAC,CAAC;EAE7BH,SAAS,CAAC,MAAM;IACd,MAAMiC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,gBAAgB,GAAG,MAAMhC,KAAK,CAACiC,GAAG,CAAC,GAAGjB,WAAW,WAAW,CAAC;QACnEO,WAAW,CAACS,gBAAgB,CAACE,IAAI,CAAC;QAElC,IAAIN,OAAO,CAACO,YAAY,IAAIL,MAAM,EAAE;UAClC,MAAMM,aAAa,GAAG,MAAMpC,KAAK,CAACiC,GAAG,CACnC,GAAGjB,WAAW,+BAA+Bc,MAAM,EACrD,CAAC;UACDL,gBAAgB,CAACW,aAAa,CAACF,IAAI,CAACV,aAAa,IAAI,EAAE,CAAC;QAC1D;MACF,CAAC,CAAC,OAAOa,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;MAC5C,CAAC,SAAS;QACRV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACD,MAAM,EAAEF,OAAO,CAACO,YAAY,CAAC,CAAC;EAElC,MAAMK,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,GAAG,CAC9B,GAAG3B,WAAW,WAAW,EACzB;QAAEyB,QAAQ;QAAEX;MAAO,CAAC,EACpB;QAAEc,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUjB,OAAO,CAACO,YAAY;QAAG;MAAE,CACjE,CAAC;MACDV,gBAAgB,CAACiB,QAAQ,CAACR,IAAI,CAACV,aAAa,CAAC;IAC/C,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,GAAG,CAAC;IAClD;EACF,CAAC;EAED,MAAMS,aAAa,GAAIC,EAAE,IAAKvB,aAAa,CAACwB,QAAQ,CAACD,EAAE,CAAC;EAExD,IAAIrB,OAAO,EAAE;IACX,oBACEX,OAAA,CAACZ,GAAG;MAAC8C,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,eAC3FvC,OAAA,CAACJ,gBAAgB;QAAA4C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAEV;EAEA,oBACE3C,OAAA,CAACZ,GAAG;IAAC8C,EAAE,EAAE;MAAEU,QAAQ,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,EAAE,EAAE;MAAE,CAAC;MAAEC,QAAQ,EAAE,CAAC;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAT,QAAA,gBAC/EvC,OAAA,CAACL,UAAU;MAACsD,OAAO,EAAC,IAAI;MAACC,SAAS,EAAC,IAAI;MAACC,YAAY;MAACC,KAAK,EAAC,QAAQ;MAAClB,EAAE,EAAE;QAAEmB,UAAU,EAAE,MAAM;QAAEC,YAAY,EAAE;MAAE,CAAE;MAAAf,QAAA,EAAC;IAEjH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAEb3C,OAAA,CAACX,IAAI;MAACkE,SAAS;MAACC,OAAO,EAAE,CAAE;MAACpB,cAAc,EAAC,QAAQ;MAAAG,QAAA,EAChDhC,QAAQ,CAACkD,GAAG,CAAEC,MAAM,iBACnB1D,OAAA,CAACX,IAAI;QAACsE,IAAI;QAAkBd,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACc,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAtB,QAAA,eACtDvC,OAAA,CAACV,IAAI;UAAC4C,EAAE,EAAE;YAAEI,MAAM,EAAE,GAAG;YAAEH,OAAO,EAAE,MAAM;YAAE2B,aAAa,EAAE,QAAQ;YAAEC,YAAY,EAAE,CAAC;YAAEC,SAAS,EAAE;UAAE,CAAE;UAAAzB,QAAA,gBACjGvC,OAAA,CAACT,SAAS;YACR2D,SAAS,EAAC,KAAK;YACfe,KAAK,EAAEP,MAAM,CAACQ,QAAS;YACvBC,GAAG,EAAET,MAAM,CAACU,IAAK;YACjBlC,EAAE,EAAE;cACFI,MAAM,EAAE,GAAG;cAAE;cACb+B,SAAS,EAAE;YACb;UAAE;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACF3C,OAAA,CAACR,WAAW;YAAC0C,EAAE,EAAE;cAAEoC,QAAQ,EAAE,CAAC;cAAEC,QAAQ,EAAE;YAAO,CAAE;YAAAhC,QAAA,gBACjDvC,OAAA,CAACL,UAAU;cAACwD,YAAY;cAACF,OAAO,EAAC,IAAI;cAACC,SAAS,EAAC,IAAI;cAAChB,EAAE,EAAE;gBAAEmB,UAAU,EAAE;cAAO,CAAE;cAAAd,QAAA,EAC7EmB,MAAM,CAACU;YAAI;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,EACZe,MAAM,CAACc,YAAY,CAACf,GAAG,CAAC,CAACgB,IAAI,EAAEC,KAAK,kBACnC1E,OAAA,CAACL,UAAU;cAAasD,OAAO,EAAC,OAAO;cAAC0B,KAAK,EAAC,gBAAgB;cAAApC,QAAA,GAAC,SAC3D,EAACkC,IAAI;YAAA,GADQC,KAAK;cAAAlC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACb,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAES,CAAC,eACd3C,OAAA,CAACP,WAAW;YAACyC,EAAE,EAAE;cAAEU,QAAQ,EAAE,CAAC;cAAEgC,aAAa,EAAE;YAAE,CAAE;YAAArC,QAAA,EAChDxB,MAAM,gBACLf,OAAA,CAACN,MAAM;cACLuD,OAAO,EAAC,UAAU;cAClB4B,IAAI,EAAC,OAAO;cACZC,OAAO,EAAEA,CAAA,KAAMrD,gBAAgB,CAACiC,MAAM,CAACqB,GAAG,CAAE;cAC5CC,SAAS,EAAEjD,aAAa,CAAC2B,MAAM,CAACqB,GAAG,CAAC,gBAAG/E,OAAA,CAACF,YAAY;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAAG3C,OAAA,CAACH,kBAAkB;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cAAAJ,QAAA,EAEhFR,aAAa,CAAC2B,MAAM,CAACqB,GAAG,CAAC,GAAG,OAAO,GAAG;YAAM;cAAAvC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC,gBAET3C,OAAA,CAACL,UAAU;cAACsD,OAAO,EAAC,SAAS;cAAC0B,KAAK,EAAC,gBAAgB;cAAApC,QAAA,EAAC;YAErD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY;UACb;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC,GAtCOe,MAAM,CAACqB,GAAG;QAAAvC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuCpB,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrC,EAAA,CAzGWD,IAAI;EAAA,QAKMlB,UAAU,EAChBD,YAAY;AAAA;AAAA+F,EAAA,GANhB5E,IAAI;AAAA,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}