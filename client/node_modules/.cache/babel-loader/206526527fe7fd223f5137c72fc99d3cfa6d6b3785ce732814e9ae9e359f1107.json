{"ast":null,"code":"var _jsxFileName = \"D:\\\\Your Memories\\\\client\\\\src\\\\pages\\\\create-memory.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useGetUserID } from \"../hooks/useGetUserID\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateMemory = () => {\n  _s();\n  const userID = useGetUserID();\n  const [memory, setMemory] = useState({\n    name: \"\",\n    descriptions: [],\n    imageURL: \"\",\n    timeSpent: \"\",\n    userOwner: \"\" // Initially empty\n  });\n\n  // Set userOwner after userID is available\n  useEffect(() => {\n    if (userID) {\n      setMemory(prevMemory => ({\n        ...prevMemory,\n        userOwner: userID\n      }));\n    }\n  }, [userID]);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setMemory({\n      ...memory,\n      [name]: value\n    });\n  };\n  const handleDescriptionChange = (event, idx) => {\n    const {\n      value\n    } = event.target;\n    const descriptions = [...memory.descriptions];\n    descriptions[idx] = value;\n    setMemory({\n      ...memory,\n      descriptions\n    });\n  };\n  const addDescription = () => {\n    setMemory({\n      ...memory,\n      descriptions: [...memory.descriptions, \"\"]\n    });\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3001/memories\", {\n        ...memory\n      });\n      alert(\"Memory Created!\");\n    } catch (err) {\n      console.error(\"Error while creating memory:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-memory\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"descriptions\",\n        children: \"Descriptions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), memory.descriptions.map((description, idx) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"descriptions\",\n        value: description,\n        onChange: event => handleDescriptionChange(event, idx)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDescription,\n        type: \"button\",\n        children: \"Add Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageURL\",\n        children: \"Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"imageURL\",\n        name: \"imageURL\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"timeSpent\",\n        children: \"Time Spent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"timeSpent\",\n        name: \"timeSpent\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateMemory, \"EiozIlVbpY2k/vSBdyv3aAapECs=\", false, function () {\n  return [useGetUserID];\n});\n_c = CreateMemory;\nvar _c;\n$RefreshReg$(_c, \"CreateMemory\");","map":{"version":3,"names":["useState","useEffect","axios","useGetUserID","jsxDEV","_jsxDEV","CreateMemory","_s","userID","memory","setMemory","name","descriptions","imageURL","timeSpent","userOwner","prevMemory","handleChange","event","value","target","handleDescriptionChange","idx","addDescription","onSubmit","preventDefault","post","alert","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","map","description","onClick","_c","$RefreshReg$"],"sources":["D:/Your Memories/client/src/pages/create-memory.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useGetUserID } from \"../hooks/useGetUserID\";\r\n\r\nexport const CreateMemory = () => {\r\n  const userID = useGetUserID();\r\n\r\n  const [memory, setMemory] = useState({\r\n    name: \"\",\r\n    descriptions: [],\r\n    imageURL: \"\",\r\n    timeSpent: \"\",\r\n    userOwner: \"\",  // Initially empty\r\n  });\r\n\r\n  // Set userOwner after userID is available\r\n  useEffect(() => {\r\n    if (userID) {\r\n      setMemory((prevMemory) => ({\r\n        ...prevMemory,\r\n        userOwner: userID,\r\n      }));\r\n    }\r\n  }, [userID]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setMemory({ ...memory, [name]: value });\r\n  };\r\n\r\n  const handleDescriptionChange = (event, idx) => {\r\n    const { value } = event.target;\r\n    const descriptions = [...memory.descriptions];\r\n    descriptions[idx] = value;\r\n    setMemory({ ...memory, descriptions });\r\n  };\r\n\r\n  const addDescription = () => {\r\n    setMemory({ ...memory, descriptions: [...memory.descriptions, \"\"] });\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await axios.post(\"http://localhost:3001/memories\", { ...memory });\r\n      alert(\"Memory Created!\");\r\n    } catch (err) {\r\n      console.error(\"Error while creating memory:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-memory\">\r\n      <h2>Create Memory</h2>\r\n      <form onSubmit={onSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input type=\"text\" id=\"name\" name=\"name\" onChange={handleChange} />\r\n\r\n        <label htmlFor=\"descriptions\">Descriptions</label>\r\n        {memory.descriptions.map((description, idx) => (\r\n          <input\r\n            key={idx}\r\n            type=\"text\"\r\n            name=\"descriptions\"\r\n            value={description}\r\n            onChange={(event) => handleDescriptionChange(event, idx)}\r\n          />\r\n        ))}\r\n        <button onClick={addDescription} type=\"button\">\r\n          Add Description\r\n        </button>\r\n\r\n        <label htmlFor=\"imageURL\">Image URL</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"imageURL\"\r\n          name=\"imageURL\"\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <label htmlFor=\"timeSpent\">Time Spent</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"timeSpent\"\r\n          name=\"timeSpent\"\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <button type=\"submit\">Create Memory</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}