{"ast":null,"code":"var _jsxFileName = \"D:\\\\Your Memories\\\\client\\\\src\\\\pages\\\\create-memory.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\n\n// Material-UI Components\nimport { Box, Button, TextField, Typography, Paper, IconButton } from \"@mui/material\";\n// Material-UI Icons\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\nexport const CreateMemory = () => {\n  _s();\n  const [cookies, _] = useCookies([\"access_token\"]);\n  const navigate = useNavigate();\n  const [memory, setMemory] = useState({\n    name: \"\",\n    descriptions: [\"\"],\n    // Start with one empty description field\n    imageURL: \"\",\n    timeSpent: \"\"\n  });\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setMemory({\n      ...memory,\n      [name]: value\n    });\n  };\n  const handleDescriptionChange = (event, idx) => {\n    const {\n      value\n    } = event.target;\n    const descriptions = [...memory.descriptions];\n    descriptions[idx] = value;\n    setMemory({\n      ...memory,\n      descriptions\n    });\n  };\n  const addDescription = () => {\n    setMemory({\n      ...memory,\n      descriptions: [...memory.descriptions, \"\"]\n    });\n  };\n\n  // New function to remove a description field\n  const removeDescription = idx => {\n    const descriptions = [...memory.descriptions];\n    descriptions.splice(idx, 1); // remove one element at index idx\n    setMemory({\n      ...memory,\n      descriptions\n    });\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      await axios.post(`${BACKEND_URL}/memories`, {\n        ...memory\n      }, {\n        headers: {\n          authorization: `Bearer ${cookies.access_token}`\n        }\n      });\n      alert(\"Memory Created!\");\n      navigate(\"/\");\n    } catch (err) {\n      console.error(err);\n      alert(\"Failed to create memory. Please check console for details.\");\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // This main Box centers everything\n    _jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingY: 4 // Add some vertical padding\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 6,\n        sx: {\n          padding: 4,\n          width: '100%',\n          maxWidth: \"600px\" // Make the form a bit wider\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: onSubmit,\n          sx: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"Create a New Memory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name / Title\",\n            name: \"name\",\n            required: true,\n            fullWidth: true,\n            value: memory.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Image URL\",\n            name: \"imageURL\",\n            required: true,\n            fullWidth: true,\n            value: memory.imageURL,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Time Spent (e.g., '2 Hours', '3 Days')\",\n            name: \"timeSpent\",\n            required: true,\n            fullWidth: true,\n            value: memory.timeSpent,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Descriptions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), memory.descriptions.map((description, idx) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: `Description #${idx + 1}`,\n              fullWidth: true,\n              multiline: true // Allows multiple lines of text\n              ,\n              rows: 2 // Starts with a height of 2 lines\n              ,\n              value: description,\n              onChange: event => handleDescriptionChange(event, idx)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => removeDescription(idx),\n              color: \"error\",\n              children: /*#__PURE__*/_jsxDEV(RemoveCircleOutlineIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: addDescription,\n            startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 55\n            }, this),\n            variant: \"outlined\",\n            children: \"Add Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            size: \"large\",\n            sx: {\n              marginTop: 2\n            },\n            children: \"Create Memory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(CreateMemory, \"FwhkHgDix9RcHCN/AliH6zOJxuU=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = CreateMemory;\nvar _c;\n$RefreshReg$(_c, \"CreateMemory\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useCookies","Box","Button","TextField","Typography","Paper","IconButton","AddCircleOutlineIcon","RemoveCircleOutlineIcon","jsxDEV","_jsxDEV","BACKEND_URL","process","env","REACT_APP_BACKEND_URL","CreateMemory","_s","cookies","_","navigate","memory","setMemory","name","descriptions","imageURL","timeSpent","handleChange","event","value","target","handleDescriptionChange","idx","addDescription","removeDescription","splice","onSubmit","preventDefault","post","headers","authorization","access_token","alert","err","console","error","sx","display","justifyContent","alignItems","paddingY","children","elevation","padding","width","maxWidth","component","flexDirection","gap","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","required","fullWidth","onChange","map","description","multiline","rows","onClick","color","startIcon","type","size","marginTop","_c","$RefreshReg$"],"sources":["D:/Your Memories/client/src/pages/create-memory.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useCookies } from \"react-cookie\";\r\n\r\n// Material-UI Components\r\nimport { Box, Button, TextField, Typography, Paper, IconButton } from \"@mui/material\";\r\n// Material-UI Icons\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\r\n\r\nconst BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\r\n\r\nexport const CreateMemory = () => {\r\n  const [cookies, _] = useCookies([\"access_token\"]);\r\n  const navigate = useNavigate();\r\n\r\n  const [memory, setMemory] = useState({\r\n    name: \"\",\r\n    descriptions: [\"\"], // Start with one empty description field\r\n    imageURL: \"\",\r\n    timeSpent: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setMemory({ ...memory, [name]: value });\r\n  };\r\n\r\n  const handleDescriptionChange = (event, idx) => {\r\n    const { value } = event.target;\r\n    const descriptions = [...memory.descriptions];\r\n    descriptions[idx] = value;\r\n    setMemory({ ...memory, descriptions });\r\n  };\r\n\r\n  const addDescription = () => {\r\n    setMemory({ ...memory, descriptions: [...memory.descriptions, \"\"] });\r\n  };\r\n  \r\n  // New function to remove a description field\r\n  const removeDescription = (idx) => {\r\n    const descriptions = [...memory.descriptions];\r\n    descriptions.splice(idx, 1); // remove one element at index idx\r\n    setMemory({ ...memory, descriptions });\r\n  }\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      await axios.post(\r\n        `${BACKEND_URL}/memories`,\r\n        { ...memory },\r\n        {\r\n          headers: { authorization: `Bearer ${cookies.access_token}` },\r\n        }\r\n      );\r\n      alert(\"Memory Created!\");\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert(\"Failed to create memory. Please check console for details.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    // This main Box centers everything\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        paddingY: 4, // Add some vertical padding\r\n      }}\r\n    >\r\n      {/* Paper gives the card-like appearance with a shadow */}\r\n      <Paper\r\n        elevation={6}\r\n        sx={{\r\n          padding: 4,\r\n          width: '100%',\r\n          maxWidth: \"600px\", // Make the form a bit wider\r\n        }}\r\n      >\r\n        <Box component=\"form\" onSubmit={onSubmit} sx={{ display: \"flex\", flexDirection: \"column\", gap: 3 }}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            Create a New Memory\r\n          </Typography>\r\n\r\n          <TextField label=\"Name / Title\" name=\"name\" required fullWidth value={memory.name} onChange={handleChange} />\r\n          <TextField label=\"Image URL\" name=\"imageURL\" required fullWidth value={memory.imageURL} onChange={handleChange} />\r\n          <TextField label=\"Time Spent (e.g., '2 Hours', '3 Days')\" name=\"timeSpent\" required fullWidth value={memory.timeSpent} onChange={handleChange} />\r\n\r\n          <Typography variant=\"h6\">Descriptions</Typography>\r\n          {memory.descriptions.map((description, idx) => (\r\n            <Box key={idx} sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n               <TextField\r\n                label={`Description #${idx + 1}`}\r\n                fullWidth\r\n                multiline // Allows multiple lines of text\r\n                rows={2}   // Starts with a height of 2 lines\r\n                value={description}\r\n                onChange={(event) => handleDescriptionChange(event, idx)}\r\n              />\r\n              <IconButton onClick={() => removeDescription(idx)} color=\"error\">\r\n                <RemoveCircleOutlineIcon />\r\n              </IconButton>\r\n            </Box>\r\n          ))}\r\n          \r\n          <Button onClick={addDescription} startIcon={<AddCircleOutlineIcon />} variant=\"outlined\">\r\n            Add Description\r\n          </Button>\r\n\r\n          <Button type=\"submit\" variant=\"contained\" size=\"large\" sx={{ marginTop: 2 }}>\r\n            Create Memory\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,UAAU,QAAQ,cAAc;;AAEzC;AACA,SAASC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AACrF;AACA,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,uBAAuB,MAAM,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AAErD,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,CAAC,CAAC,GAAGlB,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;EACjD,MAAMmB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC;IACnCyB,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE,CAAC,EAAE,CAAC;IAAE;IACpBC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEL,IAAI;MAAEM;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IACpCR,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAE,CAACE,IAAI,GAAGM;IAAM,CAAC,CAAC;EACzC,CAAC;EAED,MAAME,uBAAuB,GAAGA,CAACH,KAAK,EAAEI,GAAG,KAAK;IAC9C,MAAM;MAAEH;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9B,MAAMN,YAAY,GAAG,CAAC,GAAGH,MAAM,CAACG,YAAY,CAAC;IAC7CA,YAAY,CAACQ,GAAG,CAAC,GAAGH,KAAK;IACzBP,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG;IAAa,CAAC,CAAC;EACxC,CAAC;EAED,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BX,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,YAAY,EAAE,CAAC,GAAGH,MAAM,CAACG,YAAY,EAAE,EAAE;IAAE,CAAC,CAAC;EACtE,CAAC;;EAED;EACA,MAAMU,iBAAiB,GAAIF,GAAG,IAAK;IACjC,MAAMR,YAAY,GAAG,CAAC,GAAGH,MAAM,CAACG,YAAY,CAAC;IAC7CA,YAAY,CAACW,MAAM,CAACH,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7BV,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG;IAAa,CAAC,CAAC;EACxC,CAAC;EAED,MAAMY,QAAQ,GAAG,MAAOR,KAAK,IAAK;IAChCA,KAAK,CAACS,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,MAAMtC,KAAK,CAACuC,IAAI,CACd,GAAG1B,WAAW,WAAW,EACzB;QAAE,GAAGS;MAAO,CAAC,EACb;QACEkB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUtB,OAAO,CAACuB,YAAY;QAAG;MAC7D,CACF,CAAC;MACDC,KAAK,CAAC,iBAAiB,CAAC;MACxBtB,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOuB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBD,KAAK,CAAC,4DAA4D,CAAC;IACrE;EACF,CAAC;EAED;IAAA;IACE;IACA/B,OAAA,CAACT,GAAG;MACF4C,EAAE,EAAE;QACFC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,QAAQ,EAAE,CAAC,CAAE;MACf,CAAE;MAAAC,QAAA,eAGFxC,OAAA,CAACL,KAAK;QACJ8C,SAAS,EAAE,CAAE;QACbN,EAAE,EAAE;UACFO,OAAO,EAAE,CAAC;UACVC,KAAK,EAAE,MAAM;UACbC,QAAQ,EAAE,OAAO,CAAE;QACrB,CAAE;QAAAJ,QAAA,eAEFxC,OAAA,CAACT,GAAG;UAACsD,SAAS,EAAC,MAAM;UAACpB,QAAQ,EAAEA,QAAS;UAACU,EAAE,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEU,aAAa,EAAE,QAAQ;YAAEC,GAAG,EAAE;UAAE,CAAE;UAAAP,QAAA,gBACjGxC,OAAA,CAACN,UAAU;YAACsD,OAAO,EAAC,IAAI;YAACH,SAAS,EAAC,IAAI;YAACI,YAAY;YAAAT,QAAA,EAAC;UAErD;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAEbrD,OAAA,CAACP,SAAS;YAAC6D,KAAK,EAAC,cAAc;YAAC1C,IAAI,EAAC,MAAM;YAAC2C,QAAQ;YAACC,SAAS;YAACtC,KAAK,EAAER,MAAM,CAACE,IAAK;YAAC6C,QAAQ,EAAEzC;UAAa;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7GrD,OAAA,CAACP,SAAS;YAAC6D,KAAK,EAAC,WAAW;YAAC1C,IAAI,EAAC,UAAU;YAAC2C,QAAQ;YAACC,SAAS;YAACtC,KAAK,EAAER,MAAM,CAACI,QAAS;YAAC2C,QAAQ,EAAEzC;UAAa;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClHrD,OAAA,CAACP,SAAS;YAAC6D,KAAK,EAAC,wCAAwC;YAAC1C,IAAI,EAAC,WAAW;YAAC2C,QAAQ;YAACC,SAAS;YAACtC,KAAK,EAAER,MAAM,CAACK,SAAU;YAAC0C,QAAQ,EAAEzC;UAAa;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAEjJrD,OAAA,CAACN,UAAU;YAACsD,OAAO,EAAC,IAAI;YAAAR,QAAA,EAAC;UAAY;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,EACjD3C,MAAM,CAACG,YAAY,CAAC6C,GAAG,CAAC,CAACC,WAAW,EAAEtC,GAAG,kBACxCrB,OAAA,CAACT,GAAG;YAAW4C,EAAE,EAAE;cAAEC,OAAO,EAAE,MAAM;cAAEE,UAAU,EAAE,QAAQ;cAAES,GAAG,EAAE;YAAE,CAAE;YAAAP,QAAA,gBAClExC,OAAA,CAACP,SAAS;cACT6D,KAAK,EAAE,gBAAgBjC,GAAG,GAAG,CAAC,EAAG;cACjCmC,SAAS;cACTI,SAAS,OAAC;cAAA;cACVC,IAAI,EAAE,CAAE,CAAG;cAAA;cACX3C,KAAK,EAAEyC,WAAY;cACnBF,QAAQ,EAAGxC,KAAK,IAAKG,uBAAuB,CAACH,KAAK,EAAEI,GAAG;YAAE;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1D,CAAC,eACFrD,OAAA,CAACJ,UAAU;cAACkE,OAAO,EAAEA,CAAA,KAAMvC,iBAAiB,CAACF,GAAG,CAAE;cAAC0C,KAAK,EAAC,OAAO;cAAAvB,QAAA,eAC9DxC,OAAA,CAACF,uBAAuB;gBAAAoD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC;UAAA,GAXLhC,GAAG;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYR,CACN,CAAC,eAEFrD,OAAA,CAACR,MAAM;YAACsE,OAAO,EAAExC,cAAe;YAAC0C,SAAS,eAAEhE,OAAA,CAACH,oBAAoB;cAAAqD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YAACL,OAAO,EAAC,UAAU;YAAAR,QAAA,EAAC;UAEzF;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAETrD,OAAA,CAACR,MAAM;YAACyE,IAAI,EAAC,QAAQ;YAACjB,OAAO,EAAC,WAAW;YAACkB,IAAI,EAAC,OAAO;YAAC/B,EAAE,EAAE;cAAEgC,SAAS,EAAE;YAAE,CAAE;YAAA3B,QAAA,EAAC;UAE7E;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEV,CAAC;AAAC/C,EAAA,CA5GWD,YAAY;EAAA,QACFf,UAAU,EACdD,WAAW;AAAA;AAAA+E,EAAA,GAFjB/D,YAAY;AAAA,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}