{"ast":null,"code":"var _jsxFileName = \"D:\\\\Your Memories\\\\client\\\\src\\\\pages\\\\create-memory.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useGetUserID } from \"../hooks/useGetUserID\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateMemory = () => {\n  _s();\n  const userID = useGetUserID();\n  const [memory, setMemory] = useState({\n    name: \"\",\n    descriptions: [],\n    imageURL: \"\",\n    timeSpent: \"\",\n    userOwner: \"\" // Initially empty\n  });\n\n  // Set userOwner after userID is available\n  useEffect(() => {\n    if (userID) {\n      setMemory(prevMemory => ({\n        ...prevMemory,\n        userOwner: userID\n      }));\n    }\n  }, [userID]);\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setMemory({\n      ...memory,\n      [name]: value\n    });\n  };\n  const handleDescriptionChange = (event, idx) => {\n    const {\n      value\n    } = event.target;\n    const descriptions = [...memory.descriptions];\n    descriptions[idx] = value;\n    setMemory({\n      ...memory,\n      descriptions\n    });\n  };\n  const addDescription = () => {\n    setMemory({\n      ...memory,\n      descriptions: [...memory.descriptions, \"\"]\n    });\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3001/memories\", memory);\n      alert(\"Memory Created!\");\n      navigate(\"/\");\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-memory\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"descriptions\",\n        children: \"Descriptions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), memory.descriptions.map((description, idx) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"descriptions\",\n        value: description,\n        onChange: event => {\n          handleDescriptionChange(event, idx);\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDescription,\n        type: \"button\",\n        children: \"Add Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"imageURL\",\n        children: \"Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"imageURL\",\n        name: \"imageURL\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"timeSpent\",\n        children: \"Time Spent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"timeSpent\",\n        name: \"timeSpent\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n_s(CreateMemory, \"EiozIlVbpY2k/vSBdyv3aAapECs=\", false, function () {\n  return [useGetUserID];\n});\n_c = CreateMemory;\nvar _c;\n$RefreshReg$(_c, \"CreateMemory\");","map":{"version":3,"names":["useState","axios","useGetUserID","useNavigate","jsxDEV","_jsxDEV","CreateMemory","_s","userID","memory","setMemory","name","descriptions","imageURL","timeSpent","userOwner","useEffect","prevMemory","handleChange","event","value","target","handleDescriptionChange","idx","addDescription","onSubmit","preventDefault","post","alert","navigate","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","map","description","onClick","_c","$RefreshReg$"],"sources":["D:/Your Memories/client/src/pages/create-memory.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useGetUserID } from \"../hooks/useGetUserID\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const CreateMemory = () => {\r\n\r\n      const userID = useGetUserID();\r\n\r\n  const [memory, setMemory] = useState({\r\n    name: \"\",\r\n    descriptions: [],\r\n    imageURL: \"\",\r\n    timeSpent: \"\",\r\n    userOwner: \"\",  // Initially empty\r\n  });\r\n\r\n  // Set userOwner after userID is available\r\n  useEffect(() => {\r\n    if (userID) {\r\n      setMemory((prevMemory) => ({\r\n        ...prevMemory,\r\n        userOwner: userID,\r\n      }));\r\n    }\r\n  }, [userID]);\r\n\r\n   const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setMemory({ ...memory, [name]: value });\r\n  };\r\n\r\n    const handleDescriptionChange = (event, idx) =>{\r\n        const {value} = event.target;\r\n        const descriptions = [...memory.descriptions];\r\n        descriptions[idx] = value;\r\n        setMemory({ ...memory, descriptions});\r\n    };\r\n\r\n    const addDescription = () =>{\r\n        setMemory ({...memory, descriptions: [...memory.descriptions, \"\"]});\r\n    };\r\n\r\n    const onSubmit = async (event) =>{\r\n        event.preventDefault();\r\n        try{\r\n            await axios.post(\"http://localhost:3001/memories\", memory);\r\n            alert(\"Memory Created!\");\r\n            navigate(\"/\");\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n    \r\n    return <div className=\"create-memory\">\r\n        <h2>Create Memory</h2>\r\n        <form onSubmit={onSubmit}>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input type=\"text\" id=\"name\" name=\"name\" onChange={handleChange}/>\r\n            <label htmlFor=\"descriptions\">Descriptions</label>\r\n            {memory.descriptions.map((description, idx) =>(\r\n                <input key={idx} type=\"text\" name=\"descriptions\" value={description} \r\n                onChange={(event) =>{\r\n                    handleDescriptionChange(event,idx);\r\n                }} />\r\n            ))}\r\n            <button onClick={addDescription} type=\"button\">Add Description</button>\r\n            <label htmlFor=\"imageURL\">Image URL</label>\r\n            <input type=\"text\" id=\"imageURL\" name=\"imageURL\" onChange={handleChange}/>\r\n            <label htmlFor=\"timeSpent\">Time Spent</label>\r\n            <input type=\"text\" id=\"timeSpent\" name=\"timeSpent\" onChange={handleChange}/>\r\n            <button type=\"submit\">Create Memory</button>\r\n        </form>\r\n        </div>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}